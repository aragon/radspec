{"version":3,"sources":["../../src/helpers/formatPct.js"],"names":["value","base","precision","valueBn","BN","baseBn","oneHundred","formattedAmount","mul","Number","type"],"mappings":";;;;;;;;;AAAA;;AACA;;eAEe;AACb;;;;;;;;AAQA,OAAOA,KAAP,EAAcC,IAAI,GAAG,sBAAO,EAAP,CAArB,EAAiCC,SAAS,GAAG,CAA7C,KAAmD;AACjD,QAAMC,OAAO,GAAG,IAAIC,WAAJ,CAAOJ,KAAP,CAAhB;AACA,QAAMK,MAAM,GAAG,IAAID,WAAJ,CAAOH,IAAP,CAAf;AAEA,QAAMK,UAAU,GAAG,sBAAO,CAAP,CAAnB;AACA,QAAMC,eAAe,GAAG,wBAASJ,OAAO,CAACK,GAAR,CAAYF,UAAZ,CAAT,EAAkCD,MAAlC,EAA0CI,MAAM,CAACP,SAAD,CAAhD,CAAxB;AAEA,SAAO;AACLQ,IAAAA,IAAI,EAAE,QADD;AAELV,IAAAA,KAAK,EAAG,GAAEO,eAAgB;AAFrB,GAAP;AAID,C","sourcesContent":["import BN from 'bn.js'\nimport { formatBN, tenPow } from './lib/formatBN'\n\nexport default () =>\n  /**\n   * Format a percentage amount\n   *\n   * @param {*} value The number to be formatted as a percentage\n   * @param {*} [base=10^18] The number that is considered to be 100% when calculating the percentage\n   * @param {*} [precision=2] The number of decimal places to format to\n   * @return {Promise<radspec/evaluator/TypedValue>}\n   */\n  async (value, base = tenPow(18), precision = 2) => {\n    const valueBn = new BN(value)\n    const baseBn = new BN(base)\n\n    const oneHundred = tenPow(2)\n    const formattedAmount = formatBN(valueBn.mul(oneHundred), baseBn, Number(precision))\n\n    return {\n      type: 'string',\n      value: `${formattedAmount}`\n    }\n  }\n"],"file":"formatPct.js"}