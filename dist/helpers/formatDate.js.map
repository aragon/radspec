{"version":3,"sources":["../../src/helpers/formatDate.js"],"names":["timestamp","format","type","value","Date","Number"],"mappings":";;;;;;;;;AAAA;;eAEe;AACb;;;;;;;;AAQA,OAAOA,SAAP,EAAkBC,MAAM,GAAG,WAA3B,MAA4C;AAC1CC,EAAAA,IAAI,EAAE,QADoC;AAE1CC,EAAAA,KAAK,EAAE,qBAAW,IAAIC,IAAJ,CAASC,MAAM,CAACL,SAAD,CAAN,GAAoB,IAA7B,CAAX,EAA+CC,MAA/C;AAFmC,CAA5C,C","sourcesContent":["import formatDate from 'date-fns/format';\n\nexport default () =>\n  /**\n   * Format a timestamp as a string\n   *\n   * @param {*} timestamp Unix timestamp in seconds\n   * @param {string} [format='MMM. do y'] Format for the date, defaults to a format like \"Jan. 1st 2000\"\n   *                                      Uses unicode TR35 symbols; see https://date-fns.org/v2.0.0-alpha.22/docs/format\n   * @return {Promise<radspec/evaluator/TypedValue>}\n   */\n  async (timestamp, format = 'MMM. do y') => ({\n    type: 'string',\n    value: formatDate(new Date(Number(timestamp) * 1000), format),\n  });\n"],"file":"formatDate.js"}